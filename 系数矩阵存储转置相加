#include <iostream>
using namespace std;
void matrixsetzero(int row,int matrix[][3])
{
    int i=0,j=0;
    for(i=0;i<row;i++)
    {
        for(j=0;j<3;j++)
        {
            matrix[i][j]=0;
        }
    }
}
void matrixprint(int row,int matrix[][3])
{
    int i=0;
    for(i=0;i<row;i++)
    {
        if(matrix[i][2]!=0)
        {
            cout<<matrix[i][0]<<' ';
            cout<<matrix[i][1]<<' ';
            cout<<matrix[i][2]<<endl;
        }
    }
}
void matrixsort(int row,int matrix[][3])
{
    int i=0,j=0;
    for(i=0;i<row;i++)
    {
        for(j=0;j<row-i-1;j++)
        {
            if(matrix[j][0]>matrix[j+1][0])
            {
                int temp;
                temp=matrix[j][0];
                matrix[j][0]=matrix[j+1][0];
                matrix[j+1][0]=temp;
                temp=matrix[j][1];
                matrix[j][1]=matrix[j+1][1];
                matrix[j+1][1]=temp;
                temp=matrix[j][2];
                matrix[j][2]=matrix[j+1][2];
                matrix[j+1][2]=temp;
            }
            else if(matrix[j][0]==matrix[j+1][0])
            {
                if(matrix[j][1]>matrix[j+1][1])
                {
                    int temp;
                    temp=matrix[j][1];
                    matrix[j][1]=matrix[j+1][1];
                    matrix[j+1][1]=temp;
                    temp=matrix[j][2];
                    matrix[j][2]=matrix[j+1][2];
                    matrix[j+1][2]=temp;
                }
            }
        }
    }
}
int main()
{
    int numofrow1,numofcolumn1,numofelement1;
    cin>>numofrow1>>numofcolumn1>>numofelement1;
    int matrix1[numofelement1][3],matrix1copy[numofelement1][3];
    matrixsetzero(numofelement1,matrix1);
    matrixsetzero(numofelement1,matrix1copy);
    int i=0,j=0,k=0;
    for(i=0;i<numofelement1;i++)
    {
        cin>>matrix1[i][0];
        matrix1copy[i][1]=matrix1[i][0];
        cin>>matrix1[i][1];
        matrix1copy[i][0]=matrix1[i][1];
        cin>>matrix1[i][2];
        matrix1copy[i][2]=matrix1[i][2];
    }
    cout<<"The transformed matrix  is:"<<endl;
    matrixsort(numofelement1,matrix1copy);
    matrixprint(numofelement1,matrix1copy);
    int numofrow2,numofcolumn2,numofelement2;
    cin>>numofrow2>>numofcolumn2>>numofelement2;
    int matrix2[numofelement2][3];
    matrixsetzero(numofelement1,matrix2);
    int matrixsum[numofelement1+numofelement2][3];
    matrixsetzero(numofelement1+numofelement2,matrixsum);
    for(i=0;i<numofelement2;i++)
    {
        cin>>matrix2[i][0];
        cin>>matrix2[i][1];
        cin>>matrix2[i][2];
        for(j=0;j<numofelement1;j++)
        {
            if(matrix1[j][0]==matrix2[i][0]&&matrix1[j][1]==matrix2[i][1])
            {
                matrixsum[k][0]=matrix1[j][0];
                matrixsum[k][1]=matrix1[j][1];
                matrixsum[k][2]=matrix1[j][2]+matrix2[i][2];
                k++;
                break;
            }
        }
        if(j==numofelement1)
        {
            matrixsum[k][0]=matrix2[i][0];
            matrixsum[k][1]=matrix2[i][1];
            matrixsum[k][2]=matrix2[i][2];
            k++;
        }

    }
    for(i=0;i<numofelement1;i++)
    {
        for(j=0;j<k;j++)
        {
            if(matrix1[i][0]==matrixsum[j][0]&&matrix1[i][1]==matrixsum[j][1])
            {
                break;
            }
        }
        if(j==k)
        {
            matrixsum[k][0]=matrix1[i][0];
            matrixsum[k][1]=matrix1[i][1];
            matrixsum[k][2]=matrix1[i][2];
            k++;
        }
    }
    matrixsort(numofelement1+numofelement2,matrixsum);
    cout<<"The added matrix is:"<<endl;
    matrixprint(numofelement1+numofelement2,matrixsum);


    return 0;
}
/*输入：100 90 5
1 10 100
50 60 200
50 80 100
60 60 200
99 89 10
100 90 4
1 1 10
50 60 -200
50 80 100
70 70 10
输出：
The transformed matrix  is:
10 1 100
60 50 200
60 60 200
80 50 100
89 99 10
The added matrix is:
1 1 10
1 10 100
50 80 200
60 60 200
70 70 10
99 89 10*/
